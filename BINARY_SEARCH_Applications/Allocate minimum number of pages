bool possible(int arr[],int n,int m,int upto_which_we_can_take)
{
    int student = 1;
    int curr_sum = 0;
    //we will iterate for each book
    for(int i=0;i<n;i++)
    {
        //let us check wether our upto_which_we_can_take variable is small as compare to arr[i] 
        if(arr[i]>upto_which_we_can_take)
        {
            return false;
        }
        //let us check wether we can add arr[i] in our curr_sum without taking other student
        
        if (curr_sum + arr[i] > upto_which_we_can_take) 
        { 
            student++; 
            curr_sum = arr[i]; 
            if (student > m) 
                return false; 
        } 
  
        // else update curr_sum 
        else
            curr_sum += arr[i]; 
        
    }
    return true;
}
int findPages(int *arr, int n, int m) {
    //code here
    if(n<m)
    {
        return -1;
    }
    //otherwise we will find the sum of array so that we can define the range
    int sum = 0;
    for(int i=0;i<n;i++)
    {
        sum = sum+arr[i];
    }
    //now we will do binary search
    int start = 0;
    int end = sum;
    int ans = INT_MAX;
    while(start<=end)
    {
        int mid = (start+end)/2;
        if(possible(arr,n,m,mid)==true)
        {
            ans = min(ans,mid);
            end = mid-1;
        }
        else
        {
            start = mid+1;
        }
    }
    return ans;
    
    
}
