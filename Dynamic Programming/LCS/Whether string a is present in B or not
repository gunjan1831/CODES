LOgic: Check for lcs of a and b 
if len of a==len of lcs return true 
else
false;


    int lcs(string a,string b,int m,int n)
    {
        int t[m+1][n+1];
        memset(t,0,sizeof(t));
        
        for(int i=1;i<m+1;i++)
        {
            for(int j=1;j<n+1;j++)
            {
                if(a[i-1]==b[j-1])
                {
                    t[i][j]=t[i-1][j-1]+1;
                }
                else
                {
                    t[i][j]=max(t[i-1][j],t[i][j-1]);
                }
            }
        }
        return t[m][n];
    }
    bool isSubSequence(string A, string B) 
    {
        // code here
        int m=A.size();
        int n=B.size();
        int len=lcs(A,B,m,n);
        
        if(len==m)
        {
            return true;
        }
        else
        {
            return false;
        }
        
        
    }
    
    
    Another Approach 
    TC-O(n)
    SC-O(1)
     bool isSubSequence(string A, string B) 
    {
        // code here
        int m=A.size();
        int n=B.size();
        int i=0,j=0;
        while(i<m && j<n)
        {
            if(A[i]==B[j])
            {
                i++;
                j++;
            }
            else
            {
                j++;
            }
        }
        if(i==A.length())
        {
            return true;
        }
        else
        {
            return false;
        }
        
        
    }
