int getLongestSubsequence(string A, string B) {
        
        int n = A.length();
        int m = B.length();
        
        int table[n+1][m+1];   // making a 2D Table to store longest subsequences
                               // of every length possible.
        
        for(int i=0;i<n+1;i++)
        {
            for(int j=0;j<m+1;j++)
            {
                if(i==0 || j==0)
                    table[i][j]=0;
            }
        }
        
        for(int i=1;i<n+1;i++)
        {
            for(int j=1;j<m+1;j++)
            {
                // If charcter of A and B matches, then we increase the value.
                // else the previous value is copied.
                
                if(m>=i && (A[j-1]==B[i-1]))
                    table[i][j] = 1+table[i-1][j-1];
                else
                    table[i][j] = table[i][j-1];
            }
        }
        
        // Finally, we find out the maximum possible value for length of B.
        
        int ans = 0;
        for(int i=1 ; i<n+1 ; i++)
            ans = max(ans,table[i][m]);
        
        return ans;
    }
