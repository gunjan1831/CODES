   //Function to return max value that can be put in knapsack of capacity W.
   int solve(int W,int wt[],int val[],int n,int dp[][1005]){
        if(dp[W][n]!=-1)    return dp[W][n];
        if(W==0 || n==0)    return 0;
        if(wt[n-1]>W)   return dp[W][n]=solve(W,wt,val,n-1,dp);
        return dp[W][n]=max(val[n-1]+solve(W-wt[n-1],wt,val,n-1,dp),solve(W,wt,val,n-1,dp));
    }
    
    int knapSack(int W, int wt[], int val[], int n) 
    {   
        int dp[W+1][1005];
        memset(dp,-1,sizeof(dp));
        return solve(W,wt,val,n,dp);
    } 
