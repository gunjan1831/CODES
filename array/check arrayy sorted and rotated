// Function to check if array is sorted and rotated
// arr[]: input array
// num: size of array
bool II (int arr[], int n)
{
	int i = 0;
	while (i < n - 1 and arr[i] <= arr[i + 1]) i++;
	if (i == n - 1) return false;

	i++;
	while (i < n - 1 and arr[i] <= arr[i + 1]) i++;
	if (i == n - 1 and arr[n - 1] <= arr[0])
		return true;
	else
		return false;
}

bool DD (int arr[], int n)
{
	int i = 0;
	while (i < n - 1 and arr[i] >= arr[i + 1]) i++;
	if (i == n - 1) return false;

	i++;
	while (i < n - 1 and arr[i] >= arr[i + 1]) i++;
	if (i == n - 1 and arr[n - 1] >= arr[0])
		return true;
	else
		return false;
}

bool checkRotatedAndSorted(int arr[], int num) {
	return (II (arr, num) || DD (arr, num));
}
