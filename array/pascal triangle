vector<ll> modularInverse(ll n, ll prime) {
        vector<ll> dp(n + 1);
        dp[0] = dp[1] = 1;
        for (int i = 2; i <= n; i++)
            dp[i] = dp[prime % i] * (prime - prime / i) % prime;
        return dp;
    }
public:
    vector<ll> nthRowOfPascalTriangle(int n) {
        const ll MOD = 1e9 + 7;
        auto mod = modularInverse(n, MOD);
        vector<ll> v;
        int c = 1;
        for (int i = 1; i <= n; i++) {
            v.push_back(c);
            c = ((c % MOD * (n - i)) % MOD * mod[i]) % MOD;
        }
        return v;
    }
