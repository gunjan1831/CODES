#include <iostream>
using namespace std;


class Node
{
 public:
  int data;
  Node* next;
  
  Node(int value)
  {
    data=value;
    next=NULL;
  }
};
Node* head=NULL;
void insertfront(Node* &head,int x)
{
  Node* t=new Node(x);
  
  t->next=head;
  head=t;
  
}

void insertback(Node* &head,int x)
{
  Node*t= new Node(x);
  Node* temp=head;
  if(head==NULL)
  {
    head=t;
    
  }
  else
  {
  while(temp->next!=NULL)
  {
    temp=temp->next;
  }
  temp->next=t;
  }
}

void display(Node* head)
{
  Node* temp=head;
  
  if(head==NULL)
  {
    cout<<"Linked list is empty.";
  }
  while(temp!=NULL)
  {
    cout<<temp->data<<" ";
    temp=temp->next;
  }
  cout<<"\n";
}

int deletefront(Node* &head)
{
  if(head==NULL)
  {
    return -1;
  }
  Node*temp=head;
  int a=temp->data;
  head=temp->next;
  delete(temp);
  return a;
}

int deleteback(Node* &head)
{
  if(head==NULL)
  {
    return -1;
  }
  if(head->next==NULL)
  {
    return deletefront(head);
  }
  Node*temp=head,*prev=NULL;
  while(temp->next!=NULL)
  {
    prev=temp;
    temp=temp->next;
  }
  prev->next=NULL;
   int b=temp->data;
  delete(temp);
  return b;
  
}


int main() 
{   
    
    int choice;
    while(1)
    {
        cin >> choice;
        if(choice == 1)
        {
            int x;
            cout <<"Enter value of element\n";
            cin >> x;
            insertfront(head,x);
        }
        else if(choice == 2)
        {
            int x;
            cout <<"Enter value of element\n";
            cin >> x;
            insertback(head,x);
        }
        else if(choice == 3)
        {
            display(head);
        }
        else if(choice == 4)
        {
            int x = deletefront(head);
            if(x != -1)
            cout << x <<" deleted from beginning successfully.\n";
            else
            cout <<"Linked list is empty.";
        }
        else if(choice == 5)
        {
            int x = deleteback(head);
            cout << x <<" deleted from end successfully.\n";
        }
        else
        {
            break;
        }
    }
      return 0;
    
}
