long maximum_sum(int N,vector<int> A,int K)
{
   // Your code here
   unordered_map<int,int> mp;
   int i=0;
   for(i=0;i<A.size();i++){
        if(mp.find(A[i])==mp.end()){
            mp[A[i]] = 1;
        }
        else
            mp[A[i]]++;
   }
    priority_queue<pair<int,int>> pq;
    for(auto itr: mp){
        pq.push({itr.second, itr.first});
    }
    long ans = 0;
    for(i=1;i<=K;i++){
        pair<int,int> p = pq.top();
        ans += p.second;
        pq.pop();
        pq.push({p.first-1, p.second});
    }
    return ans;
}
