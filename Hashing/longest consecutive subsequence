int findLongestConseqSubseq(int arr[], int N)
    {
     unordered_set<int>s;
     for(int i=0;i<N;i++)
     {
         s.insert(arr[i]);
     }
     int ans=0;
     for(int i=0;i<N;i++)
     {
         if(s.find(arr[i]-1)==s.end())
         {
             int j=arr[i];
             while(s.find(j)!=s.end())
             {
                 j++;
             }
             ans=max(ans,j-arr[i]);
         }
     }
     return ans;
    }
    
    Logic 
    use set hashing 
    check if s.find(arr[i]-1) exists or not for starting pt 
    then within while loop j =arr[i] 
    keep incrementing j until not found 
    
    update the ans as max of ans , j-arr[i] where j-arr[i] denoted the length of longest consecutive subsequence
